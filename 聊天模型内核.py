from sentence_transformers import SentenceTransformer, util
model = SentenceTransformer('all-mpnet-base-v2')


# 医学领域的QA字典，使用元组确保换行问题
qa_dict = {
    "阿莫西林是什么？": (
        "阿莫西林是一种青霉素类抗生素，主要通过干扰细菌细胞壁的合成杀灭细菌。"
        "\n【作用原理】："
        "\n  - 阿莫西林分子中含有β-内酰胺环，该结构与细菌细胞壁合成必需的青霉素结合蛋白（PBP）发生可逆性结合。"
        "\n  - PBP在细菌内催化肽聚糖分子交联过程，形成坚固的细胞壁结构。阿莫西林结合后，"
        "\n    阻断了这一交联过程，使得肽聚糖的架构无法正常构建。"
        "\n  - 随着细胞生长和分裂，未能形成完整的细胞壁导致细胞在高渗透压环境下最终破裂死亡。"
        "\n【深层机理】："
        "\n  - 分子层面来看，β-内酰胺环与PBP的活性位点中的丝氨酸残基发生共价键结合，仿佛“伪底物”，使得PBP失去催化功能。"
        "\n  - 此外，阿莫西林对多种PBP具有一定亲和力，能够抑制多种细菌中多个关键酶的活性，从而发挥广谱抗菌作用。"
        "\n【应用】：常用于治疗呼吸道、耳鼻喉、皮肤软组织及部分尿路感染。"
    ),
    "抗病毒药物有哪些用途？": (
        "抗病毒药物用于干扰病毒在宿主细胞内的生命周期，针对不同病毒具备不同的作用靶点。"
        "\n【作用原理】："
        "\n  - 阻断病毒与宿主细胞的结合：部分抗病毒药能与宿主细胞表面的受体或病毒衣壳蛋白结合，"
        "\n    防止病毒进入细胞。例如部分流感病毒药物可干扰病毒中血凝素（HA）与宿主受体的亲和性。"
        "\n  - 抑制病毒核酸复制：许多药物（如核苷类似物）在细胞内被激活，"
        "\n    以“错误底物”插入病毒DNA或RNA链中，导致链终止，例如阿昔洛韦在疱疹病毒中的应用。"
        "\n  - 抑制病毒蛋白加工或装配：一些药物能够干扰病毒蛋白酶的活性，"
        "\n    阻止前体蛋白的切割和成熟，从而阻断新病毒颗粒的有效组装。"
        "\n【深层机理】："
        "\n  - 分子水平上，核苷类似物与正常核苷结构相似，经细胞激酶磷酸化后掺入病毒核酸聚合酶催化的新生链中，"
        "\n    导致后续碱基无法继续添加，形成链终止。"
        "\n  - 对于蛋白酶抑制剂，如HIV蛋白酶抑制剂，其分子结构设计往往模拟底物的关键结构部分，"
        "\n    与蛋白酶活性位点结合，竞争性地抑制酶的功能，防止前蛋白正确剪切。"
        "\n【应用】：主要用于治疗流感、疱疹、HIV、病毒性肝炎等不同类型的病毒感染。"
    ),
    "什么是布洛芬？": (
        "布洛芬是一种非甾体抗炎药（NSAID），在临床上用于缓解疼痛、发热和炎症。"
        "\n【作用原理】："
        "\n  - 布洛芬通过非选择性抑制体内环氧化酶（COX-1和COX-2）的活性，使得前列腺素（尤其是PGE2）的合成减少。"
        "\n  - 前列腺素在疼痛、发炎和发热过程中作为信号分子，负责介导发炎介质的释放及神经信号传递。"
        "\n  - 抑制这一途径直接削弱了炎症反应和痛觉传导，同时干扰下丘脑中的温度调控中枢，从而达到退热效果。"
        "\n【深层机理】："
        "\n  - 在分子层面，布洛芬与COX酶的疏水性口袋结合，阻止花生四烯酸进入活性位点，从而抑制后续的氧化反应。"
        "\n  - 这种抑制作用既影响炎症介质合成，也降低了因炎症引起的免疫反应信号传递。"
        "\n【应用】：用于缓解各种轻中度疼痛（如头痛、牙痛、关节痛）以及降低发热。"
    ),
    "什么是青霉素？": (
        "青霉素是一类典型的β-内酰胺抗生素，以其特有的β-内酰胺环为结构基础，对细菌细胞壁具有强大的抑制作用。"
        "\n【作用原理】："
        "\n  - 青霉素能与细菌细胞壁合成过程中的青霉素结合蛋白（PBP）结合，干扰肽聚糖分子交联。"
        "\n  - 这种交联是生成坚固细菌细胞壁的关键步骤。失去了交联作用，细胞壁将逐渐变软，失去抵抗内外渗透压的能力。"
        "\n  - 在渗透压作用下，细菌细胞内水分进入，使细胞膜破裂，导致细菌死亡。"
        "\n【深层机理】："
        "\n  - 从结构生物学角度，青霉素分子的β-内酰胺环与PBP的活性位点特异性结合，其化学结构模仿了肽聚糖前体的部分结构。"
        "\n  - 此种模拟使得PBP错误识别并结合青霉素而非正常底物，从而导致其催化活性丧失。"
        "\n【应用】：主要用于对抗敏感菌感染，特别是针对革兰氏阳性菌（如链球菌）具有广谱杀菌作用。"
    ),
    "什么是降压药？": (
        "降压药是一类用于调控血压的药物，通过不同的生理和分子机制降低心血管系统的压力。"
        "\n【作用原理】："
        "\n  - 利尿剂：利用调节肾小管对钠及水分的重吸收，减少血容量；从分子层面上，调控相应转运蛋白的活性。"
        "\n  - β-受体阻滞剂：通过竞争性抑制交感神经释放的去甲肾上腺素与心脏β受体的结合，降低心率及心肌收缩力，"
        "\n    减少心脏输出。"
        "\n  - 钙通道阻滞剂：抑制电压依赖性钙通道，减少钙离子进入平滑肌细胞，降低肌肉细胞内钙信号，从而使血管平滑肌松弛。"
        "\n  - ACEI/ARBs：ACEI通过抑制血管紧张素转换酶（ACE）活性降低血管紧张素II的生成，而ARBs则直接阻断血管紧张素II与其受体结合，"
        "\n    这两者都减少了血管平滑肌细胞内信号通路的激活，进一步引起血管扩张。"
        "\n【深层机理】："
        "\n  - 例如在使用ACEI时，血管紧张素I无法转换为具有强烈血管收缩作用的血管紧张素II，"
        "\n    同时上调缓激肽（一种天然血管舒张剂）的水平，进一步增强降压效果。"
        "\n  - 钙通道阻滞剂在分子层面上通过抑制钙通道α1亚单位，减少了钙依赖性信号转导，降低细胞内钙浓度。"
        "\n【应用】：根据个体差异和病理生理状态，临床上可选择单药或联合使用降压药以实现有效血压控制。"
    ),
    "抗生素的滥用会有什么后果？": (
        "抗生素滥用从分子和微生物生态学角度均带来深远影响。"
        "\n【深层机理】："
        "\n  - 高频率或不恰当使用抗生素会在细菌种群中施加持续选择压力，诱导细菌发生基因突变以及水平转移耐药基因（如质粒、整合子等）的积累。"
        "\n  - 这种基因水平扩散使得耐药菌迅速传播，最终导致常规抗生素失去有效杀菌作用。"
        "\n  - 同时，抗生素在广谱杀菌过程中扰乱了宿主体内正常菌群的微生态平衡，为耐药菌和机会性病原菌的扩增提供空间。"
        "\n【结果】：导致后续治疗难度和复杂性增加，同时给公共卫生带来严峻挑战。"
    ),
    # 需要一个比如医学知识数据库，越多越有代表性越好，要高质量数据。
}
# 加载模型和预处理的问题
questions = list(qa_dict.keys())
question_embeddings = model.encode(questions, convert_to_tensor=True)
def find_top_k_similar_questions(query, k=2):
    # 对输入查询进行嵌入生成
    query_embedding = model.encode(query, convert_to_tensor=True)
    cosine_scores = util.pytorch_cos_sim(query_embedding, question_embeddings).squeeze(0)# 计算输入查询与所有问题之间的余弦相似度
    sorted_indices = cosine_scores.argsort(descending=True)# 按相似性分数降序排列
    top_k_results = []    # 收集前 k 个最相似的问题、答案和相似度分数
    for i in range(k):
        idx = sorted_indices[i]
        question = questions[idx]
        answer = qa_dict[question]
        score = cosine_scores[idx].item()
        top_k_results.append((question, answer, score))
    return top_k_results

  
# 持续对话的主循环
while True:
    query = input("请输入您的问题: ")
    top_k_results = find_top_k_similar_questions(query, k=2)
    for rank, (question, answer, score) in enumerate(top_k_results, start=1):
        print(f"Top {rank} 最相似的问题: {question}")
        print(f"答案: {answer}")
        print(f"相似度得分: {score:.4f}\n")
